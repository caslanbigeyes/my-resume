// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer/core'
import * as Local from 'contentlayer/source-files'

export { isType } from 'contentlayer/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Article = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Article'
  /** 文章标题 */
  title: string
  /** 文章摘要 */
  excerpt: string
  /** 发布日期 */
  publishedAt: IsoDateTimeString
  /** 更新日期 */
  updatedAt?: IsoDateTimeString | undefined
  /** 作者 slug */
  author: string
  /** 分类 slug */
  category: string
  /** 标签 slugs */
  tags: string[]
  /** 是否为精选文章 */
  featured: boolean
  /** 是否已发布 */
  published: boolean
  /** 封面图片 URL */
  image?: string | undefined
  /** SEO 标题 */
  seoTitle?: string | undefined
  /** SEO 描述 */
  seoDescription?: string | undefined
  /** SEO 关键词 */
  seoKeywords?: string[] | undefined
  /** Markdown file body */
  body: Markdown
  slug: string
  readingTime: json
  url: string
}

export type Author = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Author'
  /** 作者姓名 */
  name: string
  /** 头像 URL */
  avatar?: string | undefined
  /** 个人简介 */
  bio?: string | undefined
  /** 邮箱地址 */
  email?: string | undefined
  /** 个人网站 */
  website?: string | undefined
  /** GitHub 用户名 */
  github?: string | undefined
  /** Twitter 用户名 */
  twitter?: string | undefined
  /** LinkedIn 用户名 */
  linkedin?: string | undefined
  /** Markdown file body */
  body: Markdown
  slug: string
}

export type Category = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Category'
  /** 分类名称 */
  name: string
  /** 分类颜色 */
  color: string
  /** 分类描述 */
  description?: string | undefined
  /** 排序权重 */
  order: number
  /** Markdown file body */
  body: Markdown
  slug: string
}

export type Page = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Page'
  /** 页面标题 */
  title: string
  /** 页面描述 */
  description?: string | undefined
  /** 最后更新时间 */
  lastUpdated?: IsoDateTimeString | undefined
  /** 页面布局类型 */
  layout: 'default' | 'about' | 'contact'
  /** SEO 标题 */
  seoTitle?: string | undefined
  /** SEO 描述 */
  seoDescription?: string | undefined
  /** SEO 关键词 */
  seoKeywords?: string[] | undefined
  /** Markdown file body */
  body: Markdown
  slug: string
  url: string
}

export type Project = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Project'
  /** 项目标题 */
  title: string
  /** 项目描述 */
  description: string
  /** 使用的技术栈 */
  technologies: string[]
  /** GitHub 仓库地址 */
  githubUrl?: string | undefined
  /** 在线预览地址 */
  liveUrl?: string | undefined
  /** 项目截图 URL */
  imageUrl?: string | undefined
  /** 是否为精选项目 */
  featured: boolean
  /** 项目开始时间 */
  startDate: IsoDateTimeString
  /** 项目结束时间 */
  endDate?: IsoDateTimeString | undefined
  /** 项目状态 */
  status: 'planning' | 'in-progress' | 'completed' | 'archived'
  /** Markdown file body */
  body: Markdown
  slug: string
  url: string
}

export type Tag = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Tag'
  /** 标签名称 */
  name: string
  /** 标签颜色 */
  color: string
  /** 标签描述 */
  description?: string | undefined
  /** 是否为精选标签 */
  featured: boolean
  /** Markdown file body */
  body: Markdown
  slug: string
}  

/** Nested types */
  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Article | Author | Category | Page | Project | Tag
export type DocumentTypeNames = 'Article' | 'Author' | 'Category' | 'Page' | 'Project' | 'Tag'

export type NestedTypes = never
export type NestedTypeNames = never

export type DataExports = {
  allDocuments: DocumentTypes[]
  allAuthors: Author[]
  allTags: Tag[]
  allCategories: Category[]
  allArticles: Article[]
  allPages: Page[]
  allProjects: Project[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Article: Article
  Author: Author
  Category: Category
  Page: Page
  Project: Project
  Tag: Tag
}

export type NestedTypeMap = {

}

 