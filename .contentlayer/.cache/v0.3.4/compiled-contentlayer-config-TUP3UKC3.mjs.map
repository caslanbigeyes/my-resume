{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files'\nimport readingTime from 'reading-time'\n\n// \u4F5C\u8005\u7C7B\u578B\nexport const Author = defineDocumentType(() => ({\n  name: 'Author',\n  filePathPattern: `authors/**/*.md`,\n  contentType: 'markdown',\n  fields: {\n    name: {\n      type: 'string',\n      description: '\u4F5C\u8005\u59D3\u540D',\n      required: true,\n    },\n    avatar: {\n      type: 'string',\n      description: '\u5934\u50CF URL',\n      required: false,\n    },\n    bio: {\n      type: 'string',\n      description: '\u4E2A\u4EBA\u7B80\u4ECB',\n      required: false,\n    },\n    email: {\n      type: 'string',\n      description: '\u90AE\u7BB1\u5730\u5740',\n      required: false,\n    },\n    website: {\n      type: 'string',\n      description: '\u4E2A\u4EBA\u7F51\u7AD9',\n      required: false,\n    },\n    github: {\n      type: 'string',\n      description: 'GitHub \u7528\u6237\u540D',\n      required: false,\n    },\n    twitter: {\n      type: 'string',\n      description: 'Twitter \u7528\u6237\u540D',\n      required: false,\n    },\n    linkedin: {\n      type: 'string',\n      description: 'LinkedIn \u7528\u6237\u540D',\n      required: false,\n    },\n  },\n  computedFields: {\n    slug: {\n      type: 'string',\n      resolve: (doc) => doc._raw.sourceFileName.replace(/\\.md$/, ''),\n    },\n  },\n}))\n\n// \u6807\u7B7E\u7C7B\u578B\nexport const Tag = defineDocumentType(() => ({\n  name: 'Tag',\n  filePathPattern: `tags/**/*.md`,\n  contentType: 'markdown',\n  fields: {\n    name: {\n      type: 'string',\n      description: '\u6807\u7B7E\u540D\u79F0',\n      required: true,\n    },\n    color: {\n      type: 'string',\n      description: '\u6807\u7B7E\u989C\u8272',\n      required: true,\n    },\n    description: {\n      type: 'string',\n      description: '\u6807\u7B7E\u63CF\u8FF0',\n      required: false,\n    },\n    featured: {\n      type: 'boolean',\n      description: '\u662F\u5426\u4E3A\u7CBE\u9009\u6807\u7B7E',\n      default: false,\n    },\n  },\n  computedFields: {\n    slug: {\n      type: 'string',\n      resolve: (doc) => doc._raw.sourceFileName.replace(/\\.md$/, ''),\n    },\n  },\n}))\n\n// \u5206\u7C7B\u7C7B\u578B\nexport const Category = defineDocumentType(() => ({\n  name: 'Category',\n  filePathPattern: `categories/**/*.md`,\n  contentType: 'markdown',\n  fields: {\n    name: {\n      type: 'string',\n      description: '\u5206\u7C7B\u540D\u79F0',\n      required: true,\n    },\n    color: {\n      type: 'string',\n      description: '\u5206\u7C7B\u989C\u8272',\n      required: true,\n    },\n    description: {\n      type: 'string',\n      description: '\u5206\u7C7B\u63CF\u8FF0',\n      required: false,\n    },\n    order: {\n      type: 'number',\n      description: '\u6392\u5E8F\u6743\u91CD',\n      default: 0,\n    },\n  },\n  computedFields: {\n    slug: {\n      type: 'string',\n      resolve: (doc) => doc._raw.sourceFileName.replace(/\\.md$/, ''),\n    },\n  },\n}))\n\n// \u6280\u672F\u6587\u7AE0\u7C7B\u578B\nexport const Article = defineDocumentType(() => ({\n  name: 'Article',\n  filePathPattern: `articles/**/*.md`,\n  contentType: 'markdown',\n  fields: {\n    title: {\n      type: 'string',\n      description: '\u6587\u7AE0\u6807\u9898',\n      required: true,\n    },\n    excerpt: {\n      type: 'string',\n      description: '\u6587\u7AE0\u6458\u8981',\n      required: true,\n    },\n    publishedAt: {\n      type: 'date',\n      description: '\u53D1\u5E03\u65E5\u671F',\n      required: true,\n    },\n    updatedAt: {\n      type: 'date',\n      description: '\u66F4\u65B0\u65E5\u671F',\n      required: false,\n    },\n    author: {\n      type: 'string',\n      description: '\u4F5C\u8005 slug',\n      required: true,\n    },\n    category: {\n      type: 'string',\n      description: '\u5206\u7C7B slug',\n      required: true,\n    },\n    tags: {\n      type: 'list',\n      of: { type: 'string' },\n      description: '\u6807\u7B7E slugs',\n      default: [],\n    },\n    featured: {\n      type: 'boolean',\n      description: '\u662F\u5426\u4E3A\u7CBE\u9009\u6587\u7AE0',\n      default: false,\n    },\n    published: {\n      type: 'boolean',\n      description: '\u662F\u5426\u5DF2\u53D1\u5E03',\n      default: true,\n    },\n    image: {\n      type: 'string',\n      description: '\u5C01\u9762\u56FE\u7247 URL',\n      required: false,\n    },\n    seoTitle: {\n      type: 'string',\n      description: 'SEO \u6807\u9898',\n      required: false,\n    },\n    seoDescription: {\n      type: 'string',\n      description: 'SEO \u63CF\u8FF0',\n      required: false,\n    },\n    seoKeywords: {\n      type: 'list',\n      of: { type: 'string' },\n      description: 'SEO \u5173\u952E\u8BCD',\n      required: false,\n    },\n  },\n  computedFields: {\n    slug: {\n      type: 'string',\n      resolve: (doc) => doc._raw.sourceFileName.replace(/\\.md$/, ''),\n    },\n    readingTime: {\n      type: 'json',\n      resolve: (doc) => readingTime(doc.body.raw),\n    },\n    url: {\n      type: 'string',\n      resolve: (doc) => `/articles/${doc._raw.sourceFileName.replace(/\\.md$/, '')}`,\n    },\n  },\n}))\n\n// \u9875\u9762\u7C7B\u578B\uFF08\u5173\u4E8E\u9875\u9762\u7B49\u9759\u6001\u9875\u9762\uFF09\nexport const Page = defineDocumentType(() => ({\n  name: 'Page',\n  filePathPattern: `pages/**/*.md`,\n  contentType: 'markdown',\n  fields: {\n    title: {\n      type: 'string',\n      description: '\u9875\u9762\u6807\u9898',\n      required: true,\n    },\n    description: {\n      type: 'string',\n      description: '\u9875\u9762\u63CF\u8FF0',\n      required: false,\n    },\n    lastUpdated: {\n      type: 'date',\n      description: '\u6700\u540E\u66F4\u65B0\u65F6\u95F4',\n      required: false,\n    },\n    layout: {\n      type: 'enum',\n      options: ['default', 'about', 'contact'],\n      description: '\u9875\u9762\u5E03\u5C40\u7C7B\u578B',\n      default: 'default',\n    },\n    seoTitle: {\n      type: 'string',\n      description: 'SEO \u6807\u9898',\n      required: false,\n    },\n    seoDescription: {\n      type: 'string',\n      description: 'SEO \u63CF\u8FF0',\n      required: false,\n    },\n    seoKeywords: {\n      type: 'list',\n      of: { type: 'string' },\n      description: 'SEO \u5173\u952E\u8BCD',\n      required: false,\n    },\n  },\n  computedFields: {\n    slug: {\n      type: 'string',\n      resolve: (doc) => doc._raw.sourceFileName.replace(/\\.md$/, ''),\n    },\n    url: {\n      type: 'string',\n      resolve: (doc) => `/${doc._raw.sourceFileName.replace(/\\.md$/, '')}`,\n    },\n  },\n}))\n\n// \u9879\u76EE\u7C7B\u578B\nexport const Project = defineDocumentType(() => ({\n  name: 'Project',\n  filePathPattern: `projects/**/*.md`,\n  contentType: 'markdown',\n  fields: {\n    title: {\n      type: 'string',\n      description: '\u9879\u76EE\u6807\u9898',\n      required: true,\n    },\n    description: {\n      type: 'string',\n      description: '\u9879\u76EE\u63CF\u8FF0',\n      required: true,\n    },\n    technologies: {\n      type: 'list',\n      of: { type: 'string' },\n      description: '\u4F7F\u7528\u7684\u6280\u672F\u6808',\n      default: [],\n    },\n    githubUrl: {\n      type: 'string',\n      description: 'GitHub \u4ED3\u5E93\u5730\u5740',\n      required: false,\n    },\n    liveUrl: {\n      type: 'string',\n      description: '\u5728\u7EBF\u9884\u89C8\u5730\u5740',\n      required: false,\n    },\n    imageUrl: {\n      type: 'string',\n      description: '\u9879\u76EE\u622A\u56FE URL',\n      required: false,\n    },\n    featured: {\n      type: 'boolean',\n      description: '\u662F\u5426\u4E3A\u7CBE\u9009\u9879\u76EE',\n      default: false,\n    },\n    startDate: {\n      type: 'date',\n      description: '\u9879\u76EE\u5F00\u59CB\u65F6\u95F4',\n      required: true,\n    },\n    endDate: {\n      type: 'date',\n      description: '\u9879\u76EE\u7ED3\u675F\u65F6\u95F4',\n      required: false,\n    },\n    status: {\n      type: 'enum',\n      options: ['planning', 'in-progress', 'completed', 'archived'],\n      description: '\u9879\u76EE\u72B6\u6001',\n      default: 'completed',\n    },\n  },\n  computedFields: {\n    slug: {\n      type: 'string',\n      resolve: (doc) => doc._raw.sourceFileName.replace(/\\.md$/, ''),\n    },\n    url: {\n      type: 'string',\n      resolve: (doc) => `/projects/${doc._raw.sourceFileName.replace(/\\.md$/, '')}`,\n    },\n  },\n}))\n\nexport default makeSource({\n  contentDirPath: './content',\n  documentTypes: [Author, Tag, Category, Article, Page, Project],\n  markdown: {\n    remarkPlugins: [],\n    rehypePlugins: [],\n  },\n})\n"],
  "mappings": "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",
  "names": []
}
